{
  "name": "ide-vscode",
  "displayName": "Dafny",
  "description": "Dafny for Visual Studio Code",
  "version": "3.2.1",
  "publisher": "dafny-lang",
  "repository": {
    "type": "git",
    "url": "https://github.com/dafny-lang/ide-vscode"
  },
  "bugs": {
    "url": "https://github.com/dafny-lang/ide-vscode/issues"
  },
  "qna": false,
  "license": "MIT",
  "galleryBanner": {
    "color": "#FFEC50",
    "theme": "light"
  },
  "icon": "logo.png",
  "engines": {
    "vscode": "^1.68.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "submenus": [
      {
        "id": "dafny.context",
        "label": "Dafny"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorTextFocus && editorLangId == dafny",
          "submenu": "dafny.context",
          "group": "7_Dafny@5"
        }
      ],
      "dafny.context": [
        {
          "when": "editorTextFocus && editorLangId == dafny",
          "command": "dafny.build",
          "group": "7_Dafny@5"
        },
        {
          "when": "editorTextFocus && editorLangId == dafny",
          "command": "dafny.buildCustomArgs",
          "group": "7_Dafny@6"
        },
        {
          "when": "editorTextFocus && editorLangId == dafny",
          "command": "dafny.run",
          "group": "7_Dafny@7"
        },
        {
          "when": "editorTextFocus && editorLangId == dafny",
          "command": "dafny.test",
          "group": "7_Dafny@8"
        },
        {
          "when": "editorTextFocus && editorLangId == dafny && dafny.counterexampleMenu.CanShowCounterExample",
          "command": "dafny.showCounterexample",
          "group": "7_Dafny@1"
        },
        {
          "when": "editorTextFocus && editorLangId == dafny && !dafny.counterexampleMenu.CanShowCounterExample",
          "command": "dafny.hideCounterexample",
          "group": "7_Dafny@2"
        },
        {
          "when": "editorTextFocus && editorLangId == dafny",
          "command": "dafny.copyCounterexamples",
          "group": "7_Dafny@2"
        }
      ]
    },
    "keybindings": [
      {
        "command": "dafny.build",
        "key": "ctrl+shift+b",
        "mac": "⇧⌘B",
        "when": "editorTextFocus && editorLangId == dafny"
      },
      {
        "command": "dafny.run",
        "key": "f5",
        "mac": "f5",
        "when": "editorTextFocus && editorLangId == dafny"
      },
      {
        "command": "dafny.test",
        "key": "shift+f5",
        "mac": "⇧f5",
        "when": "editorTextFocus && editorLangId == dafny"
      },
      {
        "command": "dafny.buildCustomArgs",
        "key": "f6",
        "mac": "f6",
        "when": "editorTextFocus && editorLangId == dafny"
      },
      {
        "command": "dafny.showCounterexample",
        "key": "f7",
        "when": "editorTextFocus && editorLangId == dafny"
      },
      {
        "command": "dafny.hideCounterexample",
        "key": "f8",
        "when": "editorTextFocus && editorLangId == dafny"
      }
    ],
    "languages": [
      {
        "id": "dafny",
        "aliases": [
          "Dafny",
          "dafny"
        ],
        "extensions": [
          ".dfy",
          ".dfyi",
          "dfyconfig.toml"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "dafny",
        "scopeName": "text.dfy.dafny",
        "path": "./syntaxes/Dafny.tmLanguage"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Dafny extension configuration",
      "properties": {
        "dafny.automaticVerification": {
          "type": "string",
          "default": "onchange",
          "enum": [
            "never",
            "onchange",
            "onsave"
          ],
          "description": "When Dafny should run verification automatically (requires restart). Notes:\n* If set on 'never', it is always possible to trigger verification of individual declarations manually using the test interface of VSCode if the option 'Display Verification As Tests' is checked\n* In any case but especially if using 'onchange', with versions of Dafny published after June 11, 2023, you can use the `{:only}` attribute on assertions and declarations to restrict verification temporarily"
        },
        "dafny.verificationTimeLimit": {
          "type": "number",
          "default": "20",
          "description": "Maximum number of time in seconds to verify a document, 0=infinite (requires restart)"
        },
        "dafny.verificationVirtualCores": {
          "type": "number",
          "default": "0",
          "description": "Maximum number of virtual cores that may be used for verification, 0=auto (requires restart)"
        },
        "dafny.verificationCachingPolicy": {
          "type": "string",
          "enum": [
            "No caching",
            "Basic caching",
            "Advanced caching"
          ],
          "enumDescriptions": [
            "Reverifies the whole file after each change",
            "Keeps a per-procedure cache of verification results",
            "Keeps a per-assertion cache of verification results"
          ],
          "default": "No caching",
          "description": "EXPERIMENTAL: How Dafny reuses previous verification results as a source file is being edited (requires restart)."
        },
        "dafny.markGhostStatements": {
          "type": "boolean",
          "default": "true",
          "description": "Mark ghost statements in the code (requires restart and Dafny 3.4.0+)"
        },
        "dafny.displayGutterStatus": {
          "type": "boolean",
          "default": "true",
          "description": "Display verification status in the gutter (requires restart and Dafny 3.7.0+)"
        },
        "dafny.displayVerificationAsTests": {
          "type": "boolean",
          "default": "true",
          "description": "Display verification status both in the test panel, and as actionable buttons next to top-level symbols in the editor (requires restart and Dafny 3.8.1+)"
        },
        "dafny.dafnyPlugins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Absolute paths to assemblies to be used as plugins (requires restart and Dafny 3.4.0+).\nExample 1: /user/home/dafnyplugin.dll\nExample 2: /user/home/dafnyplugin.dll,oneArgument\nExample 3: /user/home/dafnyplugin.dll,\"argument with space and \\\" escaped quote\" secondArgument"
        },
        "dafny.languageServerLaunchArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Optional array of strings to pass to the language server. Only works if the Dafny version is 3.10 or greater. Available options can be seen using 'dafny server --help'"
        },
        "dafny.cliPath": {
          "type": "string",
          "default": null,
          "description": "Path to Dafny.exe, Dafny.dll or a Dafny executable. Only used when 'custom' is the chosen Dafny version. The Dafny version must be 3.10 or greater."
        },
        "dafny.compilerOutputDir": {
          "type": "string",
          "default": "bin",
          "description": "Absolute or relative path to the compilation output directory."
        },
        "dafny.runArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Optional array of strings as Dafny run and build arguments"
        },
        "dafny.version": {
          "type": "string",
          "enum": [
            "latest stable release",
            "4.3.0",
            "4.2.0",
            "4.1.0",
            "4.0.0",
            "3.13.1",
            "3.12.0",
            "3.11.0",
            "3.10.0",
            "3.9.1",
            "3.9.0",
            "3.8.1",
            "3.8.0",
            "3.7.3",
            "3.6.0",
            "3.5.0",
            "3.4.2",
            "3.3.0",
            "3.2.0",
            "custom",
            "latest nightly"
          ],
          "default": "latest stable release",
          "description": "The preferred Dafny version to use (requires restart)."
        },
        "dafny.dotnetExecutablePath": {
          "type": "string",
          "description": "The absolute path of the dotnet binary. Only necessary if dotnet is not in system PATH (you'll get an error if that's the case)."
        },
        "dafny.colorCounterexamples": {
          "type": "object",
          "default": {
            "backgroundColor": null,
            "fontColor": null
          },
          "description": "Customize the color (HEX) of counterexamples. There are two default colors: for dark theme (#0d47a1, #e3f2fd) and light theme (#bbdefb, #102027). This color setting will override both defaults."
        },
        "dafny.terminalCommandPrefix": {
          "type": "string",
          "default": null,
          "description": "The prefix to use when executing a command in the VS Code terminal. Defaults to & on windows."
        }
      }
    },
    "commands": [
      {
        "command": "dafny.build",
        "title": "Dafny: Build"
      },
      {
        "command": "dafny.buildCustomArgs",
        "title": "Dafny: Build with Custom Arguments"
      },
      {
        "command": "dafny.test",
        "title": "Dafny: Test"
      },
      {
        "command": "dafny.run",
        "title": "Dafny: Run"
      },
      {
        "command": "dafny.showCounterexample",
        "title": "Dafny: Show Counterexample (experimental)"
      },
      {
        "command": "dafny.hideCounterexample",
        "title": "Dafny: Hide Counterexample (experimental)"
      },
      {
        "command": "dafny.copyCounterexamples",
        "title": "Dafny: Copy Counterexamples to Clipboard (experimental)"
      },
      {
        "command": "dafny.restartServer",
        "title": "Dafny: Restart server"
      }
    ]
  },
  "activationEvents": [],
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts --max-warnings 0",
    "test": "node ./out/src/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.1.0",
    "@types/node": "^16.11.43",
    "@types/promise.any": "^2.0.0",
    "@types/proxyquire": "^1.3.28",
    "@types/vscode": "^1.68.0",
    "@types/which": "^2.0.1",
    "@typescript-eslint/eslint-plugin": "^4.31.1",
    "@typescript-eslint/parser": "^4.31.1",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^7.32.0",
    "glob": "^7.1.7",
    "mocha": "^9.2.0",
    "ts-loader": "^9.2.5",
    "typescript": "^4.4.3",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.10.0"
  },
  "dependencies": {
    "cross-fetch": "^3.1.5",
    "extract-zip": "^2.0.1",
    "got": "^11.8.2",
    "promise.any": "^2.0.2",
    "proxyquire": "^2.1.3",
    "vscode-languageclient": "^9.0.0",
    "vscode-uri": "^3.0.2",
    "which": "^2.0.2"
  },
  "__metadata": {
    "id": "36e6ec4b-cd6e-4792-8088-91e0631e4b3d",
    "publisherDisplayName": "dafny-lang",
    "publisherId": "77351d22-0a7b-4a0a-b0dc-d10fc29768e1",
    "isPreReleaseVersion": false
  }
}